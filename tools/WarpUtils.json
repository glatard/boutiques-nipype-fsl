{
    "inputs": [
        {
            "command-line-flag": "--args",
            "name": "Args",
            "optional": true,
            "list": false,
            "command-line-key": "[ARGS]",
            "type": "String",
            "id": "args",
            "description": "A string. Additional parameters to the command."
        },
        {
            "command-line-flag": "--environ",
            "name": "Environ",
            "default-value": {},
            "optional": true,
            "list": false,
            "command-line-key": "[ENVIRON]",
            "type": "String",
            "id": "environ",
            "description": "A dictionary with keys which are a value of type 'str' and with values which are a value of type 'str'. Environment variables."
        },
        {
            "command-line-flag": "--ignore_exception",
            "name": "Ignore exception",
            "default-value": false,
            "optional": true,
            "list": false,
            "command-line-key": "[IGNORE_EXCEPTION]",
            "type": "Number",
            "id": "ignore_exception",
            "description": "A boolean. Print an error message instead of throwing an exception in case the interface fails to run."
        },
        {
            "command-line-flag": "--in_file",
            "name": "In file",
            "optional": false,
            "list": false,
            "command-line-key": "[IN_FILE]",
            "type": "File",
            "id": "in_file",
            "description": "An existing file name. Name of file containing warp-coefficients/fields. this would typically be the output from the --cout switch of fnirt (but can also use fields, like the output from --fout)."
        },
        {
            "command-line-flag": "--knot_space",
            "name": "Knot space",
            "optional": true,
            "list": false,
            "command-line-key": "[KNOT_SPACE]",
            "type": "Number",
            "id": "knot_space",
            "description": "A tuple of the form: (an integer (int or long), an integer (int or long), an integer (int or long)). Alternative (to --warpres) specification of the resolution of the output spline-field."
        },
        {
            "command-line-flag": "--out_file",
            "name": "Out file",
            "optional": true,
            "list": false,
            "command-line-key": "[OUT_FILE]",
            "type": "String",
            "id": "out_file",
            "description": "A file name. Name of output file. the format of the output depends on what other parameters are set. the default format is a (4d) field-file. if the --outformat is set to spline the format will be a (4d) file of spline coefficients."
        },
        {
            "command-line-flag": "--out_format",
            "name": "Out format",
            "optional": true,
            "list": false,
            "command-line-key": "[OUT_FORMAT]",
            "type": "String",
            "id": "out_format",
            "description": "'spline' or 'field'. Specifies the output format. if set to field (default) the output will be a (4d) field-file. if set to spline the format will be a (4d) file of spline coefficients."
        },
        {
            "command-line-flag": "--out_jacobian",
            "name": "Out jacobian",
            "optional": true,
            "list": false,
            "command-line-key": "[OUT_JACOBIAN]",
            "type": "String",
            "id": "out_jacobian",
            "description": "A file name. Specifies that a (3d) file of jacobian determinants corresponding to --in should be produced and written to filename."
        },
        {
            "command-line-flag": "--output_type",
            "name": "Output type",
            "optional": true,
            "list": false,
            "command-line-key": "[OUTPUT_TYPE]",
            "type": "String",
            "id": "output_type",
            "description": "'nifti_pair' or 'nifti_pair_gz' or 'nifti_gz' or 'nifti'. Fsl output type."
        },
        {
            "command-line-flag": "--reference",
            "name": "Reference",
            "optional": false,
            "list": false,
            "command-line-key": "[REFERENCE]",
            "type": "File",
            "id": "reference",
            "description": "An existing file name. Name of a file in target space. note that the target space is now different from the target space that was used to create the --warp file. it would typically be the file that was specified with the --in argument when running fnirt."
        },
        {
            "command-line-flag": "--terminal_output",
            "name": "Terminal output",
            "optional": true,
            "list": false,
            "command-line-key": "[TERMINAL_OUTPUT]",
            "type": "String",
            "id": "terminal_output",
            "description": "'stream' or 'allatonce' or 'file' or 'none'. Control terminal output: `stream` - displays to terminal immediately (default), `allatonce` - waits till command is finished to display output, `file` - writes output to file, `none` - output is ignored."
        },
        {
            "command-line-flag": "--warp_resolution",
            "name": "Warp resolution",
            "optional": true,
            "list": false,
            "command-line-key": "[WARP_RESOLUTION]",
            "type": "Number",
            "id": "warp_resolution",
            "description": "A tuple of the form: (a float, a float, a float). Specifies the resolution/knot-spacing of the splines pertaining to the coefficients in the --out file. this parameter is only relevant if --outformat is set to spline. it should be noted that if the --in file has a higher resolution, the resulting coefficients will pertain to the closest (in a least-squares sense) file in the space of fields with the --warpres resolution. it should also be noted that the resolution will always be an integer multiple of the voxel size."
        },
        {
            "command-line-flag": "--with_affine",
            "name": "With affine",
            "optional": true,
            "list": false,
            "command-line-key": "[WITH_AFFINE]",
            "type": "Number",
            "id": "with_affine",
            "description": "A boolean. Specifies that the affine transform (i.e. that which was specified for the --aff parameter in fnirt) should be included as displacements in the --out file. that can be useful for interfacing with software that cannot decode fsl/fnirt coefficient-files (where the affine transform is stored separately from the displacements)."
        },
        {
            "command-line-flag": "--write_jacobian",
            "name": "Write jacobian",
            "default-value": false,
            "optional": false,
            "list": false,
            "command-line-key": "[WRITE_JACOBIAN]",
            "type": "Number",
            "id": "write_jacobian",
            "description": "A boolean. Switch on --jac flag with automatically generated filename."
        }
    ],
    "name": "WarpUtils",
    "command-line": "nipype_cmd nipype.interfaces.fsl WarpUtils [ARGS] [ENVIRON] [IGNORE_EXCEPTION] [IN_FILE] [KNOT_SPACE] [OUT_FILE] [OUT_FORMAT] [OUT_JACOBIAN] [OUTPUT_TYPE] [REFERENCE] [TERMINAL_OUTPUT] [WARP_RESOLUTION] [WITH_AFFINE] [WRITE_JACOBIAN] ",
    "tool-version": "5.0.6",
    "outputs": [
        {
            "path-template": "[OUT_FILE]",
            "optional": true,
            "type": "File",
            "name": "Out file",
            "id": "out_file"
        }
    ],
    "docker-index": "http://index.docker.io",
    "schema-version": "0.2-snapshot",
    "docker-image": "glatard/nipype_fsl",
    "description": "WarpUtils, as implemented in Nipype (module: nipype.interfaces.fsl, interface: WarpUtils)."
}