{
    "inputs": [
        {
            "command-line-flag": "--args",
            "name": "Args",
            "optional": true,
            "list": false,
            "command-line-key": "[ARGS]",
            "type": "String",
            "id": "args",
            "description": "A string. Additional parameters to the command."
        },
        {
            "command-line-flag": "--design_file",
            "name": "Design file",
            "optional": false,
            "list": false,
            "command-line-key": "[DESIGN_FILE]",
            "type": "File",
            "id": "design_file",
            "description": "An existing file name. Name of the matrix with time courses (e.g. glm design or melodic mixing matrix)."
        },
        {
            "command-line-flag": "--environ",
            "name": "Environ",
            "default-value": {},
            "optional": true,
            "list": false,
            "command-line-key": "[ENVIRON]",
            "type": "String",
            "id": "environ",
            "description": "A dictionary with keys which are a value of type 'str' and with values which are a value of type 'str'. Environment variables."
        },
        {
            "command-line-flag": "--filter_all",
            "name": "Filter all",
            "optional": false,
            "list": false,
            "command-line-key": "[FILTER_ALL]",
            "type": "Number",
            "id": "filter_all",
            "description": "A boolean. Use all columns in the design file in denoising."
        },
        {
            "command-line-flag": "--filter_columns",
            "name": "Filter columns",
            "optional": false,
            "list": true,
            "command-line-key": "[FILTER_COLUMNS]",
            "type": "Number",
            "id": "filter_columns",
            "description": "A list of items which are an integer (int or long). (1-based) column indices to filter out of the data."
        },
        {
            "command-line-flag": "--ignore_exception",
            "name": "Ignore exception",
            "default-value": false,
            "optional": true,
            "list": false,
            "command-line-key": "[IGNORE_EXCEPTION]",
            "type": "Number",
            "id": "ignore_exception",
            "description": "A boolean. Print an error message instead of throwing an exception in case the interface fails to run."
        },
        {
            "command-line-flag": "--in_file",
            "name": "In file",
            "optional": false,
            "list": false,
            "command-line-key": "[IN_FILE]",
            "type": "File",
            "id": "in_file",
            "description": "An existing file name. Input file name (4d image)."
        },
        {
            "command-line-flag": "--mask",
            "name": "Mask",
            "optional": true,
            "list": false,
            "command-line-key": "[MASK]",
            "type": "File",
            "id": "mask",
            "description": "An existing file name. Mask image file name."
        },
        {
            "command-line-flag": "--out_file",
            "name": "Out file",
            "optional": true,
            "list": false,
            "command-line-key": "[OUT_FILE]",
            "type": "String",
            "id": "out_file",
            "description": "A file name. Output file name for the filtered data."
        },
        {
            "command-line-flag": "--out_vnscales",
            "name": "Out vnscales",
            "optional": true,
            "list": false,
            "command-line-key": "[OUT_VNSCALES]",
            "type": "Number",
            "id": "out_vnscales",
            "description": "A boolean. Output scaling factors for variance normalization."
        },
        {
            "command-line-flag": "--output_type",
            "name": "Output type",
            "optional": true,
            "list": false,
            "command-line-key": "[OUTPUT_TYPE]",
            "type": "String",
            "id": "output_type",
            "description": "'nifti_pair' or 'nifti_pair_gz' or 'nifti_gz' or 'nifti'. Fsl output type."
        },
        {
            "command-line-flag": "--terminal_output",
            "name": "Terminal output",
            "optional": true,
            "list": false,
            "command-line-key": "[TERMINAL_OUTPUT]",
            "type": "String",
            "id": "terminal_output",
            "description": "'stream' or 'allatonce' or 'file' or 'none'. Control terminal output: `stream` - displays to terminal immediately (default), `allatonce` - waits till command is finished to display output, `file` - writes output to file, `none` - output is ignored."
        },
        {
            "command-line-flag": "--var_norm",
            "name": "Var norm",
            "optional": true,
            "list": false,
            "command-line-key": "[VAR_NORM]",
            "type": "Number",
            "id": "var_norm",
            "description": "A boolean. Perform variance-normalization on data."
        }
    ],
    "name": "FilterRegressor",
    "command-line": "nipype_cmd nipype.interfaces.fsl FilterRegressor [ARGS] [DESIGN_FILE] [ENVIRON] [FILTER_ALL] [FILTER_COLUMNS] [IGNORE_EXCEPTION] [IN_FILE] [MASK] [OUT_FILE] [OUT_VNSCALES] [OUTPUT_TYPE] [TERMINAL_OUTPUT] [VAR_NORM] ",
    "tool-version": "5.0.6",
    "outputs": [
        {
            "path-template": "[OUT_FILE]",
            "optional": true,
            "type": "File",
            "name": "Out file",
            "id": "out_file"
        }
    ],
    "docker-index": "http://index.docker.io",
    "schema-version": "0.2-snapshot",
    "docker-image": "glatard/nipype_fsl",
    "description": "FilterRegressor, as implemented in Nipype (module: nipype.interfaces.fsl, interface: FilterRegressor)."
}