{
    "inputs": [
        {
            "command-line-flag": "--args",
            "name": "Args",
            "optional": true,
            "list": false,
            "command-line-key": "[ARGS]",
            "type": "String",
            "id": "input_args",
            "description": "A string. Additional parameters to the command."
        },
        {
            "command-line-flag": "--complex_cartesian",
            "name": "Complex cartesian",
            "optional": true,
            "list": false,
            "command-line-key": "[COMPLEX_CARTESIAN]",
            "type": "String",
            "id": "input_complex_cartesian",
            "description": "A boolean. No description provided."
        },
        {
            "command-line-flag": "--complex_in_file",
            "name": "Complex in file",
            "optional": true,
            "list": false,
            "command-line-key": "[COMPLEX_IN_FILE]",
            "type": "File",
            "id": "input_complex_in_file",
            "description": "An existing file name. No description provided."
        },
        {
            "command-line-flag": "--complex_in_file2",
            "name": "Complex in file2",
            "optional": true,
            "list": false,
            "command-line-key": "[COMPLEX_IN_FILE2]",
            "type": "File",
            "id": "input_complex_in_file2",
            "description": "An existing file name. No description provided."
        },
        {
            "command-line-flag": "--complex_merge",
            "name": "Complex merge",
            "optional": true,
            "list": false,
            "command-line-key": "[COMPLEX_MERGE]",
            "type": "String",
            "id": "input_complex_merge",
            "description": "A boolean. No description provided."
        },
        {
            "command-line-flag": "--complex_out_file",
            "name": "Complex out file",
            "optional": true,
            "list": false,
            "command-line-key": "[COMPLEX_OUT_FILE]",
            "type": "String",
            "id": "input_complex_out_file",
            "description": "A file name. No description provided."
        },
        {
            "command-line-flag": "--complex_polar",
            "name": "Complex polar",
            "optional": true,
            "list": false,
            "command-line-key": "[COMPLEX_POLAR]",
            "type": "String",
            "id": "input_complex_polar",
            "description": "A boolean. No description provided."
        },
        {
            "command-line-flag": "--complex_split",
            "name": "Complex split",
            "optional": true,
            "list": false,
            "command-line-key": "[COMPLEX_SPLIT]",
            "type": "String",
            "id": "input_complex_split",
            "description": "A boolean. No description provided."
        },
        {
            "command-line-flag": "--end_vol",
            "name": "End vol",
            "optional": true,
            "list": false,
            "command-line-key": "[END_VOL]",
            "type": "Number",
            "id": "input_end_vol",
            "description": "An integer (int or long). No description provided."
        },
        {
            "command-line-flag": "--environ",
            "name": "Environ",
            "default-value": "{}",
            "optional": true,
            "list": false,
            "command-line-key": "[ENVIRON]",
            "type": "String",
            "id": "input_environ",
            "description": "A dictionary with keys which are a value of type 'str' and with values which are a value of type 'str'. Environment variables."
        },
        {
            "command-line-flag": "--ignore_exception",
            "name": "Ignore exception",
            "default-value": "False",
            "optional": true,
            "list": false,
            "command-line-key": "[IGNORE_EXCEPTION]",
            "type": "String",
            "id": "input_ignore_exception",
            "description": "A boolean. Print an error message instead of throwing an exception in case the interface fails to run."
        },
        {
            "command-line-flag": "--imaginary_in_file",
            "name": "Imaginary in file",
            "optional": true,
            "list": false,
            "command-line-key": "[IMAGINARY_IN_FILE]",
            "type": "File",
            "id": "input_imaginary_in_file",
            "description": "An existing file name. No description provided."
        },
        {
            "command-line-flag": "--imaginary_out_file",
            "name": "Imaginary out file",
            "optional": true,
            "list": false,
            "command-line-key": "[IMAGINARY_OUT_FILE]",
            "type": "String",
            "id": "input_imaginary_out_file",
            "description": "A file name. No description provided."
        },
        {
            "command-line-flag": "--magnitude_in_file",
            "name": "Magnitude in file",
            "optional": true,
            "list": false,
            "command-line-key": "[MAGNITUDE_IN_FILE]",
            "type": "File",
            "id": "input_magnitude_in_file",
            "description": "An existing file name. No description provided."
        },
        {
            "command-line-flag": "--magnitude_out_file",
            "name": "Magnitude out file",
            "optional": true,
            "list": false,
            "command-line-key": "[MAGNITUDE_OUT_FILE]",
            "type": "String",
            "id": "input_magnitude_out_file",
            "description": "A file name. No description provided."
        },
        {
            "command-line-flag": "--output_type",
            "name": "Output type",
            "optional": true,
            "list": false,
            "command-line-key": "[OUTPUT_TYPE]",
            "type": "String",
            "id": "input_output_type",
            "description": "'nifti_pair' or 'nifti_pair_gz' or 'nifti_gz' or 'nifti'. Fsl output type."
        },
        {
            "command-line-flag": "--phase_in_file",
            "name": "Phase in file",
            "optional": true,
            "list": false,
            "command-line-key": "[PHASE_IN_FILE]",
            "type": "File",
            "id": "input_phase_in_file",
            "description": "An existing file name. No description provided."
        },
        {
            "command-line-flag": "--phase_out_file",
            "name": "Phase out file",
            "optional": true,
            "list": false,
            "command-line-key": "[PHASE_OUT_FILE]",
            "type": "String",
            "id": "input_phase_out_file",
            "description": "A file name. No description provided."
        },
        {
            "command-line-flag": "--real_cartesian",
            "name": "Real cartesian",
            "optional": true,
            "list": false,
            "command-line-key": "[REAL_CARTESIAN]",
            "type": "String",
            "id": "input_real_cartesian",
            "description": "A boolean. No description provided."
        },
        {
            "command-line-flag": "--real_in_file",
            "name": "Real in file",
            "optional": true,
            "list": false,
            "command-line-key": "[REAL_IN_FILE]",
            "type": "File",
            "id": "input_real_in_file",
            "description": "An existing file name. No description provided."
        },
        {
            "command-line-flag": "--real_out_file",
            "name": "Real out file",
            "optional": true,
            "list": false,
            "command-line-key": "[REAL_OUT_FILE]",
            "type": "String",
            "id": "input_real_out_file",
            "description": "A file name. No description provided."
        },
        {
            "command-line-flag": "--real_polar",
            "name": "Real polar",
            "optional": true,
            "list": false,
            "command-line-key": "[REAL_POLAR]",
            "type": "String",
            "id": "input_real_polar",
            "description": "A boolean. No description provided."
        },
        {
            "command-line-flag": "--start_vol",
            "name": "Start vol",
            "optional": true,
            "list": false,
            "command-line-key": "[START_VOL]",
            "type": "Number",
            "id": "input_start_vol",
            "description": "An integer (int or long). No description provided."
        },
        {
            "command-line-flag": "--terminal_output",
            "name": "Terminal output",
            "optional": true,
            "list": false,
            "command-line-key": "[TERMINAL_OUTPUT]",
            "type": "String",
            "id": "input_terminal_output",
            "description": "'stream' or 'allatonce' or 'file' or 'none'. Control terminal output: `stream` - displays to terminal immediately (default), `allatonce` - waits till command is finished to display output, `file` - writes output to file, `none` - output is ignored."
        }
    ],
    "name": "Complex",
    "command-line": "nipype_cmd nipype.interfaces.fsl Complex [ARGS] [COMPLEX_CARTESIAN] [COMPLEX_IN_FILE] [COMPLEX_IN_FILE2] [COMPLEX_MERGE] [COMPLEX_OUT_FILE] [COMPLEX_POLAR] [COMPLEX_SPLIT] [END_VOL] [ENVIRON] [IGNORE_EXCEPTION] [IMAGINARY_IN_FILE] [IMAGINARY_OUT_FILE] [MAGNITUDE_IN_FILE] [MAGNITUDE_OUT_FILE] [OUTPUT_TYPE] [PHASE_IN_FILE] [PHASE_OUT_FILE] [REAL_CARTESIAN] [REAL_IN_FILE] [REAL_OUT_FILE] [REAL_POLAR] [START_VOL] [TERMINAL_OUTPUT] ",
    "tool-version": "5.0.6",
    "docker-index": "http://index.docker.io",
    "schema-version": "0.2-snapshot",
    "output-files": [
        {
            "path-template": "[COMPLEX_IN_FILE]_mag.nii.gz",
            "optional": true,
            "type": "File",
            "name": "Magnitude out file",
            "id": "output+magnitude_out_file"
        },
        {
            "path-template": "[COMPLEX_IN_FILE]_phase.nii.gz",
            "optional": true,
            "type": "File",
            "name": "Phase out file",
            "id": "output+phase_out_file"
        }
    ],
    "docker-image": "glatard/nipype_fsl",
    "description": "Complex, as implemented in Nipype (module: nipype.interfaces.fsl, interface: Complex)."
}